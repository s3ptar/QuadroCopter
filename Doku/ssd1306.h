
/***********************************************************************
*! \file:                   ssd1306.h
*  \projekt:                JmBadge Bicycle
*  \created on:             Apr 22, 2019
*  \author:                 R. Gräber
*  \version:                0
*  \history:                -
*  \brief
***********************************************************************/
#ifndef SSD1306_H_
#define SSD1306_H_


/***********************************************************************
* Includes
***********************************************************************/
#include "stdint.h"
#include <stddef.h> /* for size_t */
#include "PE_Types.h"
/***********************************************************************
* Informations
***********************************************************************/
/* ###################################################################
**     This component module is generated by Processor Expert. Do not modify it.
**     Filename    : LCD1.h
**     Project     : JmBadge_Bicycle_V03
**     Processor   : MCF51JM128VQH
**     Component   : SSD1306
**     Version     : Component 01.030, Driver 01.00, CPU db: 3.00.063
**     Compiler    : CodeWarrior ColdFireV1 C Compiler
**     Date/Time   : 2019-04-19, 11:53, # CodeGen: 45

**     Contents    :
**         GetWidth        - SSD1306_PixelDim SSD1306_GetWidth(void);
**         GetHeight       - SSD1306_PixelDim SSD1306_GetHeight(void);
**         GetLongerSide   - SSD1306_PixelDim SSD1306_GetLongerSide(void);
**         GetShorterSide  - SSD1306_PixelDim SSD1306_GetShorterSide(void);
**         Clear           - void SSD1306_Clear(void);
**         UpdateFull      - void SSD1306_UpdateFull(void);
**         InitCommChannel - void SSD1306_InitCommChannel(void);
**         SetContrast     - uint8_t SSD1306_SetContrast(uint8_t contrast);
**         DisplayOn       - uint8_t SSD1306_DisplayOn(bool on);
**         DisplayInvert   - uint8_t SSD1306_DisplayInvert(bool invert);
**         GetLCD          - void SSD1306_GetLCD(void);
**         GiveLCD         - void SSD1306_GiveLCD(void);
**         PrintString     - void SSD1306_PrintString(uint8_t *str);
**         Init            - void SSD1306_Init(void);
**
**Copyright : 1997 - 2014 Freescale Semiconductor, Inc. 
**All Rights Reserved.
**
**Redistribution and use in source and binary forms, with or without modification,
**are permitted provided that the following conditions are met:
**
**o Redistributions of source code must retain the above copyright notice, this list
**  of conditions and the following disclaimer.
**
**o Redistributions in binary form must reproduce the above copyright notice, this
**  list of conditions and the following disclaimer in the documentation and/or
**  other materials provided with the distribution.
**
**o Neither the name of Freescale Semiconductor, Inc. nor the names of its
**  contributors may be used to endorse or promote products derived from this
**  software without specific prior written permission.
**
**THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
**ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
**WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
**DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR
**ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
**(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
**LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
**ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
**(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
**SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
**
**http: www.freescale.com
**mail: support@freescale.com

*/    

/***********************************************************************
* Definition
***********************************************************************/
typedef bool SSD1306_PixelColor;          /* type to hold color information */
typedef uint8_t SSD1306_PixelDim;         /* one byte is enough to describe the x/y position */
typedef uint16_t SSD1306_PixelCount;      /* needed type to hold the number of pixels on the display. */

/* Which display is used */
#define SSD1306_CONFIG_SSD1306_128X64      		(1)
#define SSD1306_CONFIG_SSD1306_128X32      		(0)
#define SSD1306_CONFIG_SSD1306_I2C_ADDR    		(60)
#define SSD1306_CONFIG_INIT_DELAY_MS     		(10)
#define SSD1306_CONFIG_SSD1306_I2C_DELAY_US   	(100)
#define SSD1306_CONFIG_SSD1306_DRIVER_TYPE    	(1306)

#if SSD1306_CONFIG_SSD1306_128X64
  #define SSD1306_DISPLAY_HW_NOF_COLUMNS  128u /* number of columns in hardware */
  #define SSD1306_DISPLAY_HW_NOF_ROWS      64u /* number of rows in hardware */
  #define SSD1306_DISPLAY_HW_NOF_PAGES      8u /* number of pages in hardware */
#elif SSD1306_CONFIG_SSD1306_128X32
  #define SSD1306_DISPLAY_HW_NOF_COLUMNS  128u /* number of columns in hardware */
  #define SSD1306_DISPLAY_HW_NOF_ROWS      32u /* number of rows in hardware */
  #define SSD1306_DISPLAY_HW_NOF_PAGES      4u /* number of pages in hardware */
#endif

#define SSD1306_CMD_REG         		0x00
#define SSD1306_DATA_REG        		0x40

#define SSD1306_SET_CONTRAST 			0x81
#define SSD1306_DISPLAY_ALL_ON_RESUME 	0xA4
#define SSD1306_DISPLAY_ALL_ON 			0xA5
#define SSD1306_NORMAL_DISPLAY 			0xA6
#define SSD1306_INVERT_DISPLAY 			0xA7
#define SSD1306_DISPLAY_OFF 			0xAE
#define SSD1306_DISPLAY_ON 				0xAF
#define SSD1306_SET_DISPLAY_OFFSET 		0xD3
#define SSD1306_SET_COM_PINS 			0xDA
#define SSD1306_SET_VCOM_DETECT 		0xDB
#define SSD1306_SET_DISPLAY_CLOCK_DIV 	0xD5
#define SSD1306_SET_PRECHARGE 			0xD9
#define SSD1306_SET_MULTIPLEX 			0xA8
#define SSD1306_SET_LOW_COLUMN 			0x00
#define SSD1306_SET_HIGH_COLUMN 		0x10
#define SSD1306_SET_START_LINE 			0x40
#define SSD1306_MEMORY_MODE 			0x20
#define SSD1306_COLUMN_ADDR 			0x21
#define SSD1306_PAGE_ADDR   			0x22
#define SSD1306_COM_SCAN_INC 			0xC0
#define SSD1306_COM_SCAN_DEC 			0xC8
#define SSD1306_SEG_REMAP 				0xA0
#define SSD1306_CHARGE_PUMP 			0x8D
#define SSD1306_EXTERNAL_VCC 			0x1
#define SSD1306_SWITCH_CAP_VCC 			0x2

/* Scrolling #defines */
#define SSD1306_ACTIVATE_SCROLL 						0x2F
#define SSD1306_DEACTIVATE_SCROLL 						0x2E
#define SSD1306_SET_VERTICAL_SCROLL_AREA 				0xA3
#define SSD1306_RIGHT_HORIZONTAL_SCROLL 				0x26
#define SSD1306_LEFT_HORIZONTAL_SCROLL 					0x27
#define SSD1306_VERTICAL_AND_RIGHT_HORIZONTAL_SCROLL 	0x29
#define SSD1306_VERTICAL_AND_LEFT_HORIZONTAL_SCROLL 	0x2A

#define SSD1306_PIXEL_BLACK  		  	0 /* 0 is a black pixel */
#define SSD1306_PIXEL_WHITE  		  	1 /* 1 is a color/white pixel */
#define SSD1306_COLOR_PIXEL_SET      	SSD1306_PIXEL_WHITE /* color for a pixel set */
#define SSD1306_COLOR_PIXEL_CLR      	SSD1306_PIXEL_BLACK /* color for a pixel cleared */

#define SSD1306_COLOR_BLACK          	SSD1306_PIXEL_BLACK
#define SSD1306_COLOR_WHITE          	SSD1306_PIXEL_WHITE
#define SSD1306_COLOR_RED            	SSD1306_PIXEL_WHITE
#define SSD1306_COLOR_BRIGHT_RED     	SSD1306_COLOR_WHITE
#define SSD1306_COLOR_DARK_RED       	SSD1306_PIXEL_WHITE
#define SSD1306_COLOR_GREEN          	SSD1306_PIXEL_WHITE
#define SSD1306_COLOR_BRIGHT_GREEN   	SSD1306_PIXEL_WHITE
#define SSD1306_COLOR_DARK_GREEN     	SSD1306_PIXEL_WHITE
#define SSD1306_COLOR_BLUE           	SSD1306_PIXEL_WHITE
#define SSD1306_COLOR_BRIGHT_BLUE    	SSD1306_PIXEL_WHITE
#define SSD1306_COLOR_DARK_BLUE      	SSD1306_PIXEL_WHITE
#define SSD1306_COLOR_YELLOW         	SSD1306_PIXEL_WHITE
#define SSD1306_COLOR_BRIGHT_YELLOW  	SSD1306_PIXEL_WHITE
#define SSD1306_COLOR_ORANGE         	SSD1306_PIXEL_WHITE
#define SSD1306_COLOR_GREY           	SSD1306_PIXEL_WHITE
#define SSD1306_COLOR_BRIGHT_GREY    	SSD1306_PIXEL_WHITE

#define SSD1306_PIXEL_ON  			  	SSD1306_COLOR_WHITE /* value of a pixel if it is 'on' */
#define SSD1306_PIXEL_OFF 			 	SSD1306_COLOR_BLACK /* value of a pixel if it is 'off' */

#define SSD1306_WIDTH  					128u                /* Logical display width in pixels */
#define SSD1306_HEIGHT 					64u                 /* Logical display height in pixels */
#define SSD1306_HW_WIDTH  				SSD1306_WIDTH       /* Hardware display width in pixels */
#define SSD1306_HW_HEIGHT 				SSD1306_HEIGHT      /* Hardware display height in pixels */
#define SSD1306_HW_LONGER_SIDE  		SSD1306_WIDTH /* Hardware display longer side in pixels */
#define SSD1306_HW_SHORTER_SIDE 		SSD1306_HEIGHT /* Hardware display shorter side in pixels */

typedef enum {
  SSD1306_ORIENTATION_PORTRAIT    = 0,
  SSD1306_ORIENTATION_PORTRAIT180 = 1,
  SSD1306_ORIENTATION_LANDSCAPE   = 2,
  SSD1306_ORIENTATION_LANDSCAPE180= 3
} SSD1306_DisplayOrientation;

#define SSD1306_WritePixel(data)  \
  SSD1306_WriteDataWord(data)

#define SSD1306_ReadPixel(data)  \
  0 /* with the I2C interface it is NOT possible to read from display memory */


/***********************************************************************
* Local Funtions
***********************************************************************/

/***********************************************************************
* Constant
***********************************************************************/

/***********************************************************************
* Global Variable
***********************************************************************/
//extern SSD1306_DisplayBuf_t SSD1306_DisplayBuf; /* buffer for the display */
/***********************************************************************
* Function
***********************************************************************/
void SSD1306_WriteCommand(uint8_t cmd);
void SSD1306_WriteData(uint8_t data);
void SSD1306_WriteDataBlock(uint8_t *data, uint16_t size);
void SSD1306_Reset(bool reset);
void SSD1306_Clear(void);
void SSD1306_UpdateFull(void);
uint8_t SSD1306_SetContrast(uint8_t contrast);
uint8_t SSD1306_DisplayOn(bool on);
uint8_t SSD1306_DisplayInvert(bool invert);
void SSD1306_Init(void);
void SSD1306_DrawDot(uint8_t x, uint8_t y, bool bit);
void SSD1306_PrintChar(uint8_t ch, uint8_t x_pos, uint8_t y_pos);
void SSD1306_PrintString(uint8_t *str, uint8_t x_pos, uint8_t y_pos);
void SSD1306_DrawLine(uint8_t x_start, uint8_t x_end, uint8_t y_start, uint8_t y_end);
void SSD1306_DrawRectangle(uint8_t x_start, uint8_t y_start, uint8_t x_end, uint8_t y_end, bool fill);
void SSD1306_DrawEllipse(uint8_t center_x, uint8_t center_y, uint8_t radius_xdius_x, uint8_t radius_xdius_y, bool fill);

#endif /* SSD1306_H_ */
