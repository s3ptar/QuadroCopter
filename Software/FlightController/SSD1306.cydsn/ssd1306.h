
/***********************************************************************
*! \file:                   ssd1306.h
*  \projekt:                JmBadge Bicycle
*  \created on:             Apr 22, 2019
*  \author:                 R. Gr√§ber
*  \version:                0
*  \history:                -
*  \brief
***********************************************************************/
#ifndef SSD1306_H_
#define SSD1306_H_

/***********************************************************************
* Includes
***********************************************************************/
#include "stdint.h"
#include <stddef.h> /* for size_t */
#include "stdbool.h"
/***********************************************************************
* Informations
***********************************************************************/
/* ###################################################################
**     This component module is generated by Processor Expert. Do not modify it.
**     Filename    : LCD1.h
**     Project     : JmBadge_Bicycle_V03
**     Processor   : MCF51JM128VQH
**     Component   : SSD1306
**     Version     : Component 01.030, Driver 01.00, CPU db: 3.00.063
**     Compiler    : CodeWarrior ColdFireV1 C Compiler
**     Date/Time   : 2019-04-19, 11:53, # CodeGen: 45

**     Contents    :
**         GetWidth        - SSD1306_PixelDim SSD1306_GetWidth(void);
**         GetHeight       - SSD1306_PixelDim SSD1306_GetHeight(void);
**         GetLongerSide   - SSD1306_PixelDim SSD1306_GetLongerSide(void);
**         GetShorterSide  - SSD1306_PixelDim SSD1306_GetShorterSide(void);
**         Clear           - void SSD1306_Clear(void);
**         UpdateFull      - void SSD1306_UpdateFull(void);
**         InitCommChannel - void SSD1306_InitCommChannel(void);
**         SetContrast     - uint8_t SSD1306_SetContrast(uint8_t contrast);
**         DisplayOn       - uint8_t SSD1306_DisplayOn(bool on);
**         DisplayInvert   - uint8_t SSD1306_DisplayInvert(bool invert);
**         GetLCD          - void SSD1306_GetLCD(void);
**         GiveLCD         - void SSD1306_GiveLCD(void);
**         PrintString     - void SSD1306_PrintString(uint8_t *str);
**         Init            - void SSD1306_Init(void);
**
**Copyright : 1997 - 2014 Freescale Semiconductor, Inc. 
**All Rights Reserved.
**
**Redistribution and use in source and binary forms, with or without modification,
**are permitted provided that the following conditions are met:
**
**o Redistributions of source code must retain the above copyright notice, this list
**  of conditions and the following disclaimer.
**
**o Redistributions in binary form must reproduce the above copyright notice, this
**  list of conditions and the following disclaimer in the documentation and/or
**  other materials provided with the distribution.
**
**o Neither the name of Freescale Semiconductor, Inc. nor the names of its
**  contributors may be used to endorse or promote products derived from this
**  software without specific prior written permission.
**
**THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
**ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
**WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
**DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR
**ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
**(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
**LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
**ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
**(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
**SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
**
**http: www.freescale.com
**mail: support@freescale.com

*/    

/***********************************************************************
* Definition
***********************************************************************/


#define SSD1306_PIXEL_BLACK  		  	0 /* 0 is a black pixel */
#define SSD1306_PIXEL_WHITE  		  	1 /* 1 is a color/white pixel */
#define SSD1306_COLOR_PIXEL_SET      	SSD1306_PIXEL_WHITE /* color for a pixel set */
#define SSD1306_COLOR_PIXEL_CLR      	SSD1306_PIXEL_BLACK /* color for a pixel cleared */
#define BLACK 0
#define WHITE 1
#define INVERSE 2  
    
#define SSD1306_COLOR_BLACK          	SSD1306_PIXEL_BLACK
#define SSD1306_COLOR_WHITE          	SSD1306_PIXEL_WHITE
#define SSD1306_COLOR_RED            	SSD1306_PIXEL_WHITE
#define SSD1306_COLOR_BRIGHT_RED     	SSD1306_COLOR_WHITE
#define SSD1306_COLOR_DARK_RED       	SSD1306_PIXEL_WHITE
#define SSD1306_COLOR_GREEN          	SSD1306_PIXEL_WHITE
#define SSD1306_COLOR_BRIGHT_GREEN   	SSD1306_PIXEL_WHITE
#define SSD1306_COLOR_DARK_GREEN     	SSD1306_PIXEL_WHITE
#define SSD1306_COLOR_BLUE           	SSD1306_PIXEL_WHITE
#define SSD1306_COLOR_BRIGHT_BLUE    	SSD1306_PIXEL_WHITE
#define SSD1306_COLOR_DARK_BLUE      	SSD1306_PIXEL_WHITE
#define SSD1306_COLOR_YELLOW         	SSD1306_PIXEL_WHITE
#define SSD1306_COLOR_BRIGHT_YELLOW  	SSD1306_PIXEL_WHITE
#define SSD1306_COLOR_ORANGE         	SSD1306_PIXEL_WHITE
#define SSD1306_COLOR_GREY           	SSD1306_PIXEL_WHITE
#define SSD1306_COLOR_BRIGHT_GREY    	SSD1306_PIXEL_WHITE
    
typedef enum{
    SCROLL_PAGE_0 = 0,
    SCROLL_PAGE_1,
    SCROLL_PAGE_2,
    SCROLL_PAGE_3,
    SCROLL_PAGE_4,
    SCROLL_PAGE_5,
    SCROLL_PAGE_6,
    SCROLL_PAGE_7   
}SCROLL_AREA;

typedef enum{
    SCROLL_RIGHT = 0x26,
    SCROLL_LEFT = 0x2A
}SCROLL_DIR;

typedef enum{
    SCROLL_SPEED_0 = 0x03,  // slowest
    SCROLL_SPEED_1 = 0x02,
    SCROLL_SPEED_2 = 0x01,
    SCROLL_SPEED_3 = 0x06,
    SCROLL_SPEED_4 = 0x00,
    SCROLL_SPEED_5 = 0x05,
    SCROLL_SPEED_6 = 0x04,
    SCROLL_SPEED_7 = 0x07   // fastest
}SCROLL_SPEED;
/***********************************************************************
* Local Funtions
***********************************************************************/

/***********************************************************************
* Constant
***********************************************************************/

/***********************************************************************
* Global Variable
***********************************************************************/
//extern SSD1306_DisplayBuf_t SSD1306_DisplayBuf; /* buffer for the display */
/***********************************************************************
* Function
***********************************************************************/

void SSD1306_Init( uint8_t i2caddr );
void SSD1306_update(void);
void SSD1306_clear(void);
void SSD1306_stopscroll(void);
void SSD1306_scroll( SCROLL_AREA start, SCROLL_AREA end, SCROLL_DIR dir, SCROLL_SPEED speed );
void SSD1306_contrast( uint8_t contrast );
void SSD1306_invert( uint8_t invert );

void gfx_drawPixel(int16_t x, int16_t y, uint16_t color);
void gfx_drawLine( int16_t x0, int16_t y0, int16_t x1, int16_t y1, uint16_t color );
void gfx_setCursor( int16_t x, int16_t y );
void gfx_setTextSize( uint8_t size );
void gfx_setTextColor( uint16_t color );
void gfx_setTextBg( uint16_t background );
void gfx_write( uint8_t ch );
int16_t gfx_width(void);
int16_t gfx_height(void);
void gfx_print( const char* s );
void gfx_println( const char* s );
void gfx_drawRect( int16_t x, int16_t y, int16_t w, int16_t h, uint16_t color );
void gfx_fillRect( int16_t x, int16_t y, int16_t w, int16_t h, uint16_t color );
void gfx_drawCircle( int16_t x0, int16_t y0, int16_t r,uint16_t color );
void gfx_drawTriangle( int16_t x0, int16_t y0,int16_t x1, int16_t y1, int16_t x2, int16_t y2, uint16_t color );
void gfx_setRotation( uint8_t x );

#endif /* SSD1306_H_ */
